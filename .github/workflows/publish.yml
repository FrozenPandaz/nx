name: publish
env:
  DEBUG: napi:*
  NX_RUN_GROUP: ${{ github.run_id }}-${{ github.run_attempt }}
  NPM_CONFIG_PROVENANCE: true
on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  build-freebsd:
     runs-on: macos-11
     name: Build FreeBSD
     steps:
       - uses: actions/checkout@v3
       - name: Build
         id: build
         uses: cross-platform-actions/action@v0.21.0
         env:
           DEBUG: napi:*
           RUSTUP_IO_THREADS: 1
           ACTIONS_RUNNER_DEBUG: true
           ACTIONS_STEP_DEBUG: true
         with:
           operating_system: freebsd
           version: '13.2'
           architecture: x86-64
           environment_variables: DEBUG RUSTUP_IO_THREADS ACTIONS_RUNNER_DEBUG ACTIONS_STEP_DEBUG
           shell: bash
           run: |
             env
             whoami
             sudo pkg install -y -f node libnghttp2 npm git
             sudo npm install --location=global --ignore-scripts pnpm
             curl https://sh.rustup.rs -sSf --output rustup.sh
             sh rustup.sh -y --profile minimal --default-toolchain stable
             echo "Cargo Installed"
             source "$HOME/.cargo/env"
             echo "~~~~ rustc --version ~~~~"
             rustc --version
             echo "~~~~ node -v ~~~~"
             node -v
             echo "~~~~ pnpm --version ~~~~"
             pnpm --version
             pwd
             ls -lah
             whoami
             env
             freebsd-version
             mkdir -p /Users/runner/work/_temp/_github_workflow
             echo "{}" > /Users/runner/work/_temp/_github_workflow/event.json
             pnpm install --frozen-lockfile --ignore-scripts
             top
             pnpm nx echo
             pnpm nx reset
             rm -rf node_modules
             rm -rf dist
             rm -rf build/target
             top
             ls -lah
             echo COMPLETE
             echo KILLING ALL NODE
             killall node
             echo KILLED NODE
             top
       - name: Upload artifact
         uses: actions/upload-artifact@v3
         with:
           name: bindings-freebsd
           path: packages/**/*.node
           if-no-files-found: error
  publish:
    if: ${{ github.event_name == 'release' && github.repository_owner == 'nrwl' }}
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs:
      - build-freebsd
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: List artifacts
        run: ls -R artifacts
        shell: bash
      - name: Publish
        run: |
          git checkout -b publish/$GITHUB_REF_NAME
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          pnpm nx-release --local=false $GITHUB_REF_NAME
      - name: Trigger Docs Release
        if: ${{ !github.event.release.prerelease }}
        run: |
          # We force recreate the branch in order to always be up to date and avoid merge conflicts within the automated workflow
          git branch -f website
          git push -f origin website
    env:
      GH_TOKEN: ${{ github.token }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
